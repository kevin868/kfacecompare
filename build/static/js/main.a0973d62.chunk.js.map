{"version":3,"sources":["component/UploadIcon.svg","component/index.js","App.js","reportWebVitals.js","index.js"],"names":["styles","display","alignItems","justifyContent","flexWrap","width","ERROR","ReactImageUploadComponent","props","state","pictures","defaultImages","files","fileErrors","inputElement","onDropFile","bind","onUploadClick","triggerFileUpload","prevProps","prevState","snapshot","this","onChange","nextProps","setState","fileName","pattern","imgExtension","join","replace","RegExp","test","e","target","allFilePromises","i","length","file","fileError","name","hasExtension","size","maxFileSize","Object","assign","type","push","readFile","singleImage","Promise","all","then","newFilesData","dataURLs","slice","forEach","newFileData","dataURL","value","resolve","reject","reader","FileReader","onload","result","readAsDataURL","picture","removeIndex","findIndex","filteredPictures","filter","index","filteredFiles","map","className","errorClass","style","errorStyle","fileSizeError","fileTypeError","withIcon","src","UploadIcon","alt","withLabel","labelClass","labelStyles","label","enterAnimation","leaveAnimation","renderPreviewPictures","onClick","removeImage","click","fileContainerStyle","renderIcon","renderLabel","renderErrors","buttonType","buttonClassName","buttonStyles","buttonText","ref","input","multiple","accept","withPreview","renderPreview","React","Component","defaultProps","Intro","href","CompFace","setIsLoading","val","nextState","isLoading","error","undefined","setError","sendGoogleEvent","numPhotos","window","gtag","num_photos","sendGoogleErrorEvent","fileChangedHandler","fileIndex","console","log","fileStrIndex","filename","alias","getAliasFromIndex","updateMap","fileToAliasMap","onUpdateName","event","getFilename","uploadHandler","formData","FormData","file1","append","file2","file3","getAll","scrollToBottom","Axios","post","onBackendResponse","catch","onBackendError","response","resultArray","data","resultsArray","results","fileNum","getAliasFromFileIndex","bottom","scrollIntoView","behavior","ErrorMsg","startsWith","getAliasFromKey","key","num","float","clear","el","String","fromCharCode","UploadCell","title","defaultValue","ResultsTable","img1","img2","norm","ResultsSimilarityTable","computeSimilarity","Math","pow","E","findSimilarity","computeSimilaritySamePerson","formattedSim","round","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a0973d62.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/UploadIcon.469126df.svg\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './index.css';\nimport FlipMove from 'react-flip-move';\nimport UploadIcon from './UploadIcon.svg';\n\nconst styles = {\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  flexWrap: \"wrap\",\n  width: \"100%\"\n};\n\nconst ERROR = {\n  NOT_SUPPORTED_EXTENSION: 'NOT_SUPPORTED_EXTENSION',\n  FILESIZE_TOO_LARGE: 'FILESIZE_TOO_LARGE'\n}\n\nclass ReactImageUploadComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pictures: [...props.defaultImages],\n      files: [],\n      fileErrors: []\n    };\n    this.inputElement = '';\n    this.onDropFile = this.onDropFile.bind(this);\n    this.onUploadClick = this.onUploadClick.bind(this);\n    this.triggerFileUpload = this.triggerFileUpload.bind(this);\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot){\n    if(prevState.files !== this.state.files){\n      this.props.onChange(this.state.files, this.state.pictures);\n    }\n  }\n\n  /*\n   Load image at the beggining if defaultImage prop exists\n   */\n  componentWillReceiveProps(nextProps){\n    if(nextProps.defaultImages !== this.props.defaultImages){\n      this.setState({pictures: nextProps.defaultImages});\n    }\n  }\n\n  /*\n\t Check file extension (onDropFile)\n\t */\n  hasExtension(fileName) {\n    const pattern = '(' + this.props.imgExtension.join('|').replace(/\\./g, '\\\\.') + ')$';\n    return new RegExp(pattern, 'i').test(fileName);\n  }\n\n  /*\n   Handle file validation\n   */\n  onDropFile(e) {\n    const files = e.target.files;\n    const allFilePromises = [];\n    const fileErrors = [];\n\n    // Iterate over all uploaded files\n    for (let i = 0; i < files.length; i++) {\n      let file = files[i];\n      let fileError = {\n        name: file.name,\n      };\n      // Check for file extension\n      if (!this.hasExtension(file.name)) {\n        fileError = Object.assign(fileError, {\n          type: ERROR.NOT_SUPPORTED_EXTENSION\n        });\n        fileErrors.push(fileError);\n        continue;\n      }\n      // Check for file size\n      if(file.size > this.props.maxFileSize) {\n        fileError = Object.assign(fileError, {\n          type: ERROR.FILESIZE_TOO_LARGE\n        });\n        fileErrors.push(fileError);\n        continue;\n      }\n\n      allFilePromises.push(this.readFile(file));\n    }\n\n    this.setState({\n      fileErrors\n    });\n\n    const {singleImage} = this.props;\n\n    Promise.all(allFilePromises).then(newFilesData => {\n      const dataURLs = singleImage?[]:this.state.pictures.slice();\n      const files = singleImage?[]:this.state.files.slice();\n\n      newFilesData.forEach(newFileData => {\n        dataURLs.push(newFileData.dataURL);\n        files.push(newFileData.file);\n      });\n\n      this.setState({pictures: dataURLs, files: files});\n    });\n  }\n\n  onUploadClick(e) {\n    // Fixes https://github.com/JakeHartnell/react-images-upload/issues/55\n    e.target.value = null;\n  }\n\n  /*\n     Read a file and return a promise that when resolved gives the file itself and the data URL\n   */\n  readFile(file) {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n\n      // Read the image via FileReader API and save image result in state.\n      reader.onload = function (e) {\n        // Add the file name to the data URL\n        let dataURL = e.target.result;\n        dataURL = dataURL.replace(\";base64\", `;name=${file.name};base64`);\n        resolve({file, dataURL});\n      };\n\n      reader.readAsDataURL(file);\n    });\n  }\n\n  /*\n   Remove the image from state\n   */\n  removeImage(picture) {\n    const removeIndex = this.state.pictures.findIndex(e => e === picture);\n    const filteredPictures = this.state.pictures.filter((e, index) => index !== removeIndex);\n    const filteredFiles = this.state.files.filter((e, index) => index !== removeIndex);\n\n    this.setState({pictures: filteredPictures, files: filteredFiles}, () => {\n      this.props.onChange(this.state.files, this.state.pictures);\n    });\n  }\n\n  /*\n   Check if any errors && render\n   */\n  renderErrors() {\n    const { fileErrors } = this.state;\n    return fileErrors.map((fileError, index) => {\n      return (\n        <div className={'errorMessage ' + this.props.errorClass} key={index} style={this.props.errorStyle}>\n          * {fileError.name} {fileError.type === ERROR.FILESIZE_TOO_LARGE ? this.props.fileSizeError: this.props.fileTypeError}\n        </div>\n      );\n    });\n  }\n\n  /*\n   Render the upload icon\n   */\n  renderIcon() {\n    if (this.props.withIcon) {\n      return <img src={UploadIcon} className=\"uploadIcon\"\talt=\"Upload Icon\" />;\n    }\n  }\n\n  /*\n   Render label\n   */\n  renderLabel() {\n    if (this.props.withLabel) {\n      return <p className={this.props.labelClass} style={this.props.labelStyles}>{this.props.label}</p>\n    }\n  }\n\n  /*\n   Render preview images\n   */\n  renderPreview() {\n    return (\n      <div className=\"uploadPicturesWrapper\">\n        <FlipMove enterAnimation=\"fade\" leaveAnimation=\"fade\" style={styles}>\n          {this.renderPreviewPictures()}\n        </FlipMove>\n      </div>\n    );\n  }\n\n  renderPreviewPictures() {\n    return this.state.pictures.map((picture, index) => {\n      return (\n        <div key={index} className=\"uploadPictureContainer\">\n          <div className=\"deleteImage\" onClick={() => this.removeImage(picture)}>X</div>\n          <img src={picture} className=\"uploadPicture\" alt=\"preview\"/>\n        </div>\n      );\n    });\n  }\n\n  /*\n   On button click, trigger input file to open\n   */\n  triggerFileUpload() {\n    this.inputElement.click();\n  }\n\n  clearPictures() {\n    this.setState({pictures: []})\n  }\n\n  render() {\n    return (\n      <div className={\"fileUploader \" + this.props.className} style={this.props.style}>\n        <div className=\"fileContainer\" style={this.props.fileContainerStyle}>\n          {this.renderIcon()}\n          {this.renderLabel()}\n          <div className=\"errorsContainer\">\n            {this.renderErrors()}\n          </div>\n          <button\n            type={this.props.buttonType}\n            className={\"chooseFileButton \" + this.props.buttonClassName}\n            style={this.props.buttonStyles}\n            onClick={this.triggerFileUpload}\n          >\n            {this.props.buttonText}\n          </button>\n          <input\n            type=\"file\"\n            ref={input => this.inputElement = input}\n            name={this.props.name}\n            multiple={!this.props.singleImage}\n            onChange={this.onDropFile}\n            onClick={this.onUploadClick}\n            accept={this.props.accept}\n          />\n          { this.props.withPreview ? this.renderPreview() : null }\n        </div>\n      </div>\n    )\n  }\n}\n\nReactImageUploadComponent.defaultProps = {\n  className: '',\n  fileContainerStyle: {},\n  buttonClassName: \"\",\n  buttonStyles: {},\n  withPreview: false,\n  accept: \"image/*\",\n  name: \"\",\n  withIcon: true,\n  buttonText: \"Choose images\",\n  buttonType: \"button\",\n  withLabel: true,\n  label: \"Max file size: 5mb, accepted: jpg|gif|png\",\n  labelStyles: {},\n  labelClass: \"\",\n  imgExtension: ['.jpg', '.jpeg', '.gif', '.png'],\n  maxFileSize: 5242880,\n  fileSizeError: \" file size is too big\",\n  fileTypeError: \" is not a supported file extension\",\n  errorClass: \"\",\n  style: {},\n  errorStyle: {},\n  singleImage: false,\n  onChange: () => {},\n  defaultImages: []\n};\n\nReactImageUploadComponent.propTypes = {\n  style: PropTypes.object,\n  fileContainerStyle: PropTypes.object,\n  className: PropTypes.string,\n  onChange: PropTypes.func,\n  onDelete: PropTypes.func,\n  buttonClassName: PropTypes.string,\n  buttonStyles: PropTypes.object,\n  buttonType: PropTypes.string,\n  withPreview: PropTypes.bool,\n  accept: PropTypes.string,\n  name: PropTypes.string,\n  withIcon: PropTypes.bool,\n  buttonText: PropTypes.string,\n  withLabel: PropTypes.bool,\n  label: PropTypes.string,\n  labelStyles: PropTypes.object,\n  labelClass: PropTypes.string,\n  imgExtension: PropTypes.array,\n  maxFileSize: PropTypes.number,\n  fileSizeError: PropTypes.string,\n  fileTypeError: PropTypes.string,\n  errorClass: PropTypes.string,\n  errorStyle: PropTypes.object,\n  singleImage: PropTypes.bool,\n  defaultImages: PropTypes.array\n};\n\nexport default ReactImageUploadComponent;\n","import \"./App.css\";\nimport \"./styles.css\";\nimport { Component } from \"react\";\nimport Axios from \"axios\";\nimport ImageUploader from \"./component/index.js\";\n\nfunction App() {\n  return (\n    <div>\n      <Intro />\n      <CompFace />\n    </div>\n  );\n}\n\nconst Intro = () => (\n  <div>\n    <h1>FaceCompare</h1>\n    <div className=\"intro\">\n      <div>\n        Select 2 or 3 pictures of people to calculate how similar they are.\n        <br />\n        <br />\n        This tool uses dlib for face detection, and{\" \"}\n        <a href=\"http://cmusatyalab.github.io/openface/\">OpenFace</a> pre-trained neural net models\n        to compute a 128-dimensional face representation.\n        <br />\n        <br />\n        Privacy Note: Our server does not store any of the photos you submit.\n      </div>\n    </div>\n  </div>\n);\n\nclass CompFace extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { isLoading: false, fileToAliasMap: {} };\n  }\n\n  setIsLoading = (val) => {\n    var nextState = { isLoading: val };\n    if (val === true) {\n      nextState.error = undefined;\n    }\n    this.setState(nextState);\n  };\n  setError = (val) => {\n    this.setState({ error: val || \"Backend is down. It's Kevin's fault! Try again in 12 hours.\" });\n  };\n\n  sendGoogleEvent = (numPhotos) => {\n    window.gtag(\"event\", \"submit\", { num_photos: numPhotos });\n  };\n\n  sendGoogleErrorEvent = (numPhotos) => {\n    window.gtag(\"event\", \"backend_error\", { num_photos: numPhotos });\n  };\n\n  // Target a specific file based on fileIndex\n  // Set into state , keyd by index { file1: fileX, file2: fileY, file3: fileZ}\n  fileChangedHandler = (fileIndex) => (files) => {\n    console.log(fileIndex);\n    // ImageUploader returns an array of Files\n    const fileStrIndex = `file${fileIndex}`;\n    this.setState({ [fileStrIndex]: files[0] });\n    // Create default name in fileToAliasMap\n    // Arbitrarily give long names (usually UUIDs) a default of A, B, C depending on fileIndex 1, 2, 3\n    // Ascii A = 65, B = 66..\n\n    const filename = files[0] && files[0].name;\n    const alias = filename && filename.length > 32 ? getAliasFromIndex(fileIndex) : filename;\n    // If needed, add to our aliasMap\n    if (alias) {\n      //\n      var updateMap = this.state.fileToAliasMap || {};\n      updateMap[filename] = alias;\n      this.setState({ fileToAliasMap: updateMap });\n    }\n    // Note: currently this leads to buildup of canceled files in the fileToAliasMap\n  };\n  // Use aliasMap to stash & display the rewritten names\n  onUpdateName = (fileIndex) => (event) => {\n    var updateMap = { ...this.state.fileToAliasMap };\n    const filename = this.getFilename(fileIndex);\n    updateMap[filename] = event.target.value;\n    this.setState({ fileToAliasMap: updateMap });\n    // this.setState({ [fileIndex]: event.target.value });\n  };\n\n  uploadHandler = () => {\n    console.log(this.state);\n    const formData = new FormData();\n    var numPhotos = 0;\n    if (this.state.file1) {\n      formData.append(\"imgs[]\", this.state.file1, this.state.file1.name);\n      numPhotos += 1;\n    } else {\n      console.log(\"Must select Image A\");\n    }\n    if (this.state.file2) {\n      formData.append(\"imgs[]\", this.state.file2, this.state.file2.name);\n      numPhotos += 1;\n    } else {\n      console.log(\"Must select Image B\");\n    }\n    if (this.state.file3) {\n      formData.append(\"imgs[]\", this.state.file3, this.state.file3.name);\n      numPhotos += 1;\n    } else {\n      console.log(\"Missing Image C, Proceeding\");\n    }\n    console.log(formData.getAll(\"imgs[]\"));\n    if (formData.getAll(\"imgs[]\").length < 2) {\n      this.setError(\"Please select at least 2 images to compare.\");\n      this.scrollToBottom();\n      return;\n    }\n    this.setIsLoading(true);\n    this.sendGoogleEvent(numPhotos);\n    // const backend = \"https://0dcfd0ab0492.ngrok.io/post_imgs\";\n    // const backend = \"http://localhost:8089/post_imgs\";\n    // Cloud Engine instance\n    const backend = \"http://35.194.36.121:8089/post_imgs\";\n    Axios.post(backend, formData)\n      .then(this.onBackendResponse)\n      .catch((error) => {\n        this.onBackendError(error, numPhotos);\n      });\n  };\n\n  onBackendResponse = (response) => {\n    console.log(response);\n    this.setIsLoading(false);\n    const resultArray = response.data.resultsArray;\n    this.setState({ results: resultArray });\n    console.log(this.state);\n    this.scrollToBottom();\n  };\n\n  onBackendError = (error, numPhotos) => {\n    this.setIsLoading(false);\n    this.setError(error.response && error.response.data.error);\n    this.sendGoogleErrorEvent(numPhotos);\n    this.scrollToBottom();\n  };\n\n  getFilename = (fileNum) => {\n    const fileStrIndex = `file${fileNum}`;\n    return this.state[fileStrIndex] ? this.state[fileStrIndex].name : null;\n  };\n\n  getAliasFromFileIndex = (fileIndex) => {\n    return this.state.fileToAliasMap[this.getFilename(fileIndex)];\n  };\n\n  scrollToBottom = () => {\n    this.bottom.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  render() {\n    const errorHint = (error) =>\n      error && error.startsWith(\"Unable to find a face\") ? (\n        <h4 className=\"errorHint\">Hint: try a different photo and crop around the face.</h4>\n      ) : null;\n\n    const ErrorMsg = this.state.error ? (\n      <div className=\"errorMsg\">\n        <h5>Error: {this.state.error} </h5>\n        {errorHint(this.state.error)}\n      </div>\n    ) : null;\n\n    const getAliasFromKey = (key) => {\n      return this.state.fileToAliasMap[key] || key;\n    };\n\n    return (\n      <div>\n        <div className=\"row\">\n          <UploadCell\n            num={1}\n            fileChangedHandler={this.fileChangedHandler}\n            getFilename={this.getFilename}\n            getAliasFromFileIndex={this.getAliasFromFileIndex}\n            onUpdateName={this.onUpdateName(1)}\n          />\n          <UploadCell\n            num={2}\n            fileChangedHandler={this.fileChangedHandler}\n            getFilename={this.getFilename}\n            getAliasFromFileIndex={this.getAliasFromFileIndex}\n            onUpdateName={this.onUpdateName(2)}\n          />\n          <UploadCell\n            num={3}\n            fileChangedHandler={this.fileChangedHandler}\n            getFilename={this.getFilename}\n            getAliasFromFileIndex={this.getAliasFromFileIndex}\n            onUpdateName={this.onUpdateName(3)}\n          />\n        </div>\n        <button className=\"uploadFilesButton\" onClick={this.uploadHandler}>\n          {this.state.isLoading ? \"Loading ...\" : \"Submit\"}\n        </button>\n        {ErrorMsg}\n        <ResultsSimilarityTable results={this.state.results} getAliasFromKey={getAliasFromKey} />\n        {this.state.results ? (\n          <div className=\"filename\">\n            Raw Distances between Image Representations (Smaller is more similar)\n          </div>\n        ) : null}\n        <ResultsTable results={this.state.results} getAliasFromKey={getAliasFromKey} />\n        {this.state.results ? (\n          <div className=\"filename errorHint hintPadded\">\n            Hint: Edit the person's name in the box (optional). This makes the tables easier to\n            read!\n          </div>\n        ) : null}\n        <div // Placekeeper Div to enable scroll to end\n          style={{ float: \"left\", clear: \"both\" }}\n          ref={(el) => {\n            this.bottom = el;\n          }}\n        ></div>\n      </div>\n    );\n  }\n}\n\nconst getAliasFromIndex = (index) => {\n  return String.fromCharCode(64 + index);\n};\n\nconst UploadCell = ({\n  num,\n  fileChangedHandler,\n  getFilename,\n  getAliasFromFileIndex,\n  onUpdateName,\n}) => {\n  return (\n    <div className=\"column\">\n      <ImageUploader\n        withIcon={false}\n        buttonText={`Choose Image ${getAliasFromIndex(num)}`}\n        onChange={fileChangedHandler(num)}\n        withPreview={true}\n        imgExtension={[\".jpg\", \".gif\", \".png\", \".jpeg\"]}\n        maxFileSize={5242880}\n        singleImage={true}\n      />\n      <div className=\"filename\">\n        {/* Only display filename if we replace the edit box with shortened name */}\n        {getFilename(num) === getAliasFromFileIndex(num) ? null : getFilename(num)}\n        <div>\n          <input\n            className=\"fileRename\"\n            title=\"(Optional) Type person's name\"\n            defaultValue={getAliasFromFileIndex(num)}\n            type=\"text\"\n            onChange={onUpdateName}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\n// Pass the function getAliasFromKey because React does not allow passing the object aliasMap for rending children\nconst ResultsTable = ({ results, getAliasFromKey }) => {\n  return results ? (\n    <div>\n      <table className=\"summaryTable\">\n        <tbody>\n          <tr>\n            <th>Face 1</th>\n            <th>Face 2</th>\n            <th>Distance</th>\n          </tr>\n          {results.map(([img1, img2, norm]) => (\n            <tr>\n              <td>{getAliasFromKey(img1)}</td>\n              <td>{getAliasFromKey(img2)}</td>\n              <td>{norm}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  ) : null;\n};\n\nconst ResultsSimilarityTable = ({ results, getAliasFromKey }) => {\n  const computeSimilarity = (norm) => 1 / (1 + Math.pow(Math.E, 2 * (norm - 1.6)));\n  // Interpolate between 1 and Fermi func, when between 0.15 and 0.4\n  const computeSimilaritySamePerson = (norm) =>\n    (1 * (0.4 - norm) + computeSimilarity(norm) * (norm - 0.15)) / (0.4 - 0.15);\n  const findSimilarity = (norm) => {\n    if (norm <= 0.15) {\n      return 1;\n    }\n    if (norm > 0.4) {\n      return computeSimilarity(norm);\n    } else {\n      // Compute average between (1.0 flat and Fermi function)\n      return computeSimilaritySamePerson(norm);\n    }\n  };\n  // Multiply similarity by 100 to turn into percent\n  const formattedSim = (norm) => Math.round(findSimilarity(norm) * 100 * 10) / 10;\n  return results ? (\n    <div>\n      <table className=\"summaryTable\">\n        <tbody>\n          <tr>\n            <th>Face 1</th>\n            <th>Face 2</th>\n            <th>Similarity</th>\n          </tr>\n          {results.map(([img1, img2, norm]) => (\n            <tr>\n              <td>{getAliasFromKey(img1)}</td>\n              <td>{getAliasFromKey(img2)}</td>\n              <td>\n                {computeSimilarity(norm) > 0.6 ? (\n                  <b>{formattedSim(norm)}%</b>\n                ) : (\n                  `${formattedSim(norm)}%`\n                )}\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  ) : null;\n};\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}